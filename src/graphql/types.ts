/* THIS FILE IS AUTOMATICALLY GENERATED. DO NOT MODIFY. */
/* eslint-disable no-unused-vars, @typescript-eslint/no-unused-vars */
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = {
  [K in keyof T]: T[K];
};
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & {
  [SubKey in K]?: Maybe<T[SubKey]>;
};
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & {
  [SubKey in K]: Maybe<T[SubKey]>;
};
export type MakeEmpty<
  T extends { [key: string]: unknown },
  K extends keyof T,
> = { [_ in K]?: never };
export type Incremental<T> =
  | T
  | {
      [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never;
    };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string };
  String: { input: string; output: string };
  Boolean: { input: boolean; output: boolean };
  Int: { input: number; output: number };
  Float: { input: number; output: number };
};

export type Mutation = {
  __typename?: 'Mutation';
  signUp: NewAccount;
};

export type MutationSignUpArgs = {
  input: SignUpInput;
};

export type NewAccount = {
  __typename?: 'NewAccount';
  id: Scalars['String']['output'];
};

export type Query = {
  __typename?: 'Query';
  hello: Scalars['String']['output'];
};

export type RsaKeyPairInput = {
  protected_private_key: Scalars['String']['input'];
  public_key: Scalars['String']['input'];
};

export type SignUpInput = {
  email: Scalars['String']['input'];
  master_password_hash: Scalars['String']['input'];
  password_hint?: InputMaybe<Scalars['String']['input']>;
  protected_symmetric_key: Scalars['String']['input'];
  rsa_key_pair: RsaKeyPairInput;
  symmetric_key_iv: Scalars['String']['input'];
};
