/* THIS FILE IS AUTOMATICALLY GENERATED. DO NOT MODIFY. */
/* eslint-disable no-unused-vars, @typescript-eslint/no-unused-vars */
import * as Types from '../../types';

import { gql } from '@apollo/client';
import * as Apollo from '@apollo/client';
const defaultOptions = {} as const;
export type GetEmailPinMutationVariables = Types.Exact<{
  email: Types.Scalars['String']['input'];
}>;

export type GetEmailPinMutation = {
  __typename?: 'Mutation';
  publicAuth: {
    __typename?: 'PublicAuthMutations';
    getEmailPin: { __typename?: 'GetEmailPinResult'; email: string };
  };
};

export const GetEmailPinDocument = gql`
  mutation GetEmailPin($email: String!) {
    publicAuth {
      getEmailPin(email: $email) {
        email
      }
    }
  }
`;
export type GetEmailPinMutationFn = Apollo.MutationFunction<
  GetEmailPinMutation,
  GetEmailPinMutationVariables
>;

/**
 * __useGetEmailPinMutation__
 *
 * To run a mutation, you first call `useGetEmailPinMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useGetEmailPinMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [getEmailPinMutation, { data, loading, error }] = useGetEmailPinMutation({
 *   variables: {
 *      email: // value for 'email'
 *   },
 * });
 */
export function useGetEmailPinMutation(
  baseOptions?: Apollo.MutationHookOptions<
    GetEmailPinMutation,
    GetEmailPinMutationVariables
  >
) {
  const options = { ...defaultOptions, ...baseOptions };
  return Apollo.useMutation<GetEmailPinMutation, GetEmailPinMutationVariables>(
    GetEmailPinDocument,
    options
  );
}
export type GetEmailPinMutationHookResult = ReturnType<
  typeof useGetEmailPinMutation
>;
export type GetEmailPinMutationResult =
  Apollo.MutationResult<GetEmailPinMutation>;
export type GetEmailPinMutationOptions = Apollo.BaseMutationOptions<
  GetEmailPinMutation,
  GetEmailPinMutationVariables
>;
